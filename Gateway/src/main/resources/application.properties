spring.application.name=Gateway
server.port=8084

spring.profiles.active=docker

# EUREKA
eureka.client.serviceUrl.defautZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# GATEWAY
spring.cloud.gateway.server.webflux.routes[0].id=company_service
spring.cloud.gateway.server.webflux.routes[0].uri=http://localhost:8081
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/companies/**

spring.cloud.gateway.server.webflux.routes[1].id=job_service
spring.cloud.gateway.server.webflux.routes[1].uri=http://localhost:8082 
#spring.cloud.gateway.server.webflux.routes[1].uri=lb://JOBMS (si usa LB se ci sono molte istanze di un microservizio avviate) 
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/jobs/**

spring.cloud.gateway.server.webflux.routes[2].id=review_service
spring.cloud.gateway.server.webflux.routes[2].uri=http://localhost:8083
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/reviews/**

# Lascia Eureka fuori dal Gateway – è l'approccio più comune e consigliato.
#spring.cloud.gateway.routes[3].id=eureka_server
#spring.cloud.gateway.routes[3].uri=http://localhost:8761
#spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/main
#spring.cloud.gateway.routes[3].filters[0]=SetPath=/
#spring.cloud.gateway.routes[4].id=eureka-server-static
#spring.cloud.gateway.routes[4].uri=http://localhost:8761
#spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

# CORS config per permettere richieste dal frontend (es. React a localhost:3000)
#spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:3000
#spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
#spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
#spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

# Zipkin
management.tracing.sampling.probability=1.0

logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

